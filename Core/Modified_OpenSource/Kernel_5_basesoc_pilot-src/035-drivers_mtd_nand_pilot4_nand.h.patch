--- linux-5.4.99/drivers/mtd/nand/pilot4_nand.h	2021-03-23 14:38:18.634461492 +0800
+++ linux/drivers/mtd/nand/pilot4_nand.h	2021-03-19 17:18:45.079957500 +0800
@@ -0,0 +1,267 @@
+/*
+ * Copyright (C) 2003-2015 Emulex. All rights reserved.
+ * EMULEX is a trademark of Emulex.
+ * www.emulex.com
+ * This program is free software; you can redistribute it and/or modify it under the terms of version 2
+ * of the GNU General Public License as published by the Free Software Foundation.
+ * This program is distributed in the hope that it will be useful. ALL EXPRESS OR IMPLIED CONDITIONS,
+ * REPRESENTATIONS AND WARRANTIES, INCLUDING ANY IMPLIED WARRANTY OF MERCHANTABILITY, FITNESS FOR A
+ * PARTICULAR PURPOSE, OR NON-INFRINGEMENT, ARE DISCLAIMED, EXCEPT TO THE EXTENT THAT SUCH DISCLAIMERS
+ * ARE HELD TO BE LEGALLY INVALID. See the GNU General Public License for more details, a copy of which
+ * can be found in the file COPYING included with this package.
+ */
+
+#ifndef __PILOT4_NAND_H__
+#define __PILOT4_NAND_H__
+#define NACCTL0			0x00
+#define NANDTIM0		0x04
+#define NANDTIM1		0x08
+#define NANDTIM2		0x0C
+#define ECCLOC			0x10
+#define ASRAMTIM		0x14
+#define CPLDTIM			0x18
+#define IDDATA			0x1C	
+#define NANDSRCSTART		0x20
+#define NANDSRCEND		0x24
+#define DMACTRL			0x30
+#define NCBLKCTRL		0x3C
+#define STRTCMD			0x40
+#define NCCFG0			0x44
+#define NCCFG1			0x48
+#define NCXDDRADDR		0x4C
+#define CS0LOWADDR		0x50
+#define CS0HIGHADDR		0x54
+#define SYNCHNANDCTRL		0x58
+#define NCLMEMPIOPTRCTRL	0x64
+#define NCLMEMPGMGRSOFTRST	0x68
+#define NCLMEMTXSTS		0x6C
+#define NCLMEMRXSTS		0x70
+#define NCLMEMSTS		0x74
+#define NCLMEMPGCNT		0x78
+#define NCLMEMADDR		0x7C
+//80-8c Reserved
+
+//BITS 1 -8
+#define BITS1			0x1
+#define BITS2			0x3
+#define BITS3			0x7
+#define BITS4			0xF
+#define BITS5			0x1F
+#define BITS6			0x3F
+#define BITS7			0x7F
+#define BITS8			0xFF
+#define BITS16			0xFFFF
+
+//NACCTL0- regs defines
+#define NACCTL0_ECCCORRECT_POS		30
+#define NACCTL0_ECCCORRECT_BITS		BITS1
+#define NACCTL0_ECCCORRECT		(NACCTL0_ECCCORRECT_BITS << NACCTL0_ECCCORRECT_POS)
+
+#define NACCTL0_NONFATALSTATUS_POS	29
+#define NACCTL0_NONFATALSTATUS_BITS	BITS1
+#define NACCTL0_NONFATALSTATUS		(NACCTL0_NONFATALSTATUS_BITS << NACCTL0_NONFATALSTATUS_POS)
+
+#define NACCTL0_FATALSTATUS_POS		28
+#define NACCTL0_FATALSTATUS_BITS		BITS1
+#define NACCTL0_FATALSTATUS		(NACCTL0_FATALSTATUS_BITS << NACCTL0_FATALSTATUS_POS)
+
+#define NACCTL0_WRECC_POS			27
+#define NACCTL0_WRECC_BITS		BITS1
+#define NACCTL0_WRECC			(NACCTL0_WRECC_BITS << NACCTL0_WRECC_POS)
+
+#define NACCTL0_WRITEPROT_POS		25
+#define NACCTL0_WRITEPROT_BITS		BITS1
+#define NACCTL0_WRITEPROT			(NACCTL0_WRITEPROT_BITS << NACCTL0_WRITEPROT_POS)
+
+#define NACCTL0_ACCSP1ST_POS		23//22 - As per madhav's email on 16th March 2009 it is bit 23 not 22
+#define NACCTL0_ACCSP1ST_BITS		BITS1
+#define NACCTL0_ACCSP1ST			(NACCTL0_ACCSP1ST_BITS << NACCTL0_ACCSP1ST_POS)
+
+#define NACCTL0_CEINACTIVE_POS		21
+#define NACCTL0_CEINACTIVE_BITS		BITS1
+#define NACCTL0_CEINACTIVE		(NACCTL0_CEINACTIVE_BITS << NACCTL0_CEINACTIVE_POS)
+
+#define NACCTL0_ECCLOCINDEX_POS		16	
+#define NACCTL0_ECCLOCINDEX_BITS	 	BITS5	
+#define NACCTL0_ECCLOCINDEX		(NACCTL0_ECCLOCINDEX_BITS << NACCTL0_ECCLOCINDEX_POS)
+
+#define NACCTL0_ERRPOSINDEX_POS		8
+#define NACCTL0_ERRPOSINDEX_BITS		BITS3
+#define NACCTL0_ERRPOSINDEX		(NACCTL0_ERRPOSINDEX_BITS << NACCTL0_ERRPOSINDEX_POS)
+
+#define NACCTL0_NONFATALERREN_POS		4
+#define NACCTL0_NONFATALERREN_BITS	BITS1
+#define NACCTL0_NONFATALERREN		(NACCTL0_NONFATALERREN_BITS << NACCTL0_NONFATALERREN_POS)
+
+#define NACCTL0_FATALERREN_POS		3
+#define NACCTL0_FATALERREN_BITS		BITS1
+#define NACCTL0_FATALERREN		(NACCTL0_FATALERREN_BITS << NACCTL0_FATALERREN_POS)
+
+#define NACCTL0_ECCENABLE_POS		2
+#define NACCTL0_ECCENABLE_BITS		BITS1
+#define NACCTL0_ECCENABLE			(NACCTL0_ECCENABLE_BITS << NACCTL0_ECCENABLE_POS)
+
+#define NACCTL0_CNTRLRMODE_POS		0
+#define NACCTL0_CNTRLRMODE_BITS		BITS2
+#define NACCTL0_CNTRLRMODE		(NACCTL0_CNTRLRMODE_BITS << NACCTL0_CNTRLRMODE_POS)
+
+//ECCLOC - regs defines
+#define ECCLOC_ECCLOC_POS		0
+#define ECCLOC_ECCLOC_BITS		BITS7
+#define ECCLOC_ECCLOC			(ECCLOC_ECCLOC_BITS << ECCLOC_ECCLOC_POS)
+
+//STRTCMD - regs defines
+#define STRTCMD_STARTCMD_POS		31
+#define STRTCMD_STARTCMD_BITS		BITS1
+#define STRTCMD_STARTCMD		(STRTCMD_STARTCMD_BITS << STRTCMD_STARTCMD_POS)
+
+//DMACTRL regs defines
+#define DMACTRL_CMDADDNO_POS	24
+#define DMACTRL_CMDADDNO_BITS   BITS8
+#define DMACTRL_CMDADDNO	(DMACTRL_CMDADDNO_BITS << DMACTRL_CMDADDNO_POS)
+
+#define DMACTRL_WRAC_POS	23
+#define DMACTRL_WRAC_BITS	BITS1
+#define DMACTRL_WRAC		(DMACTRL_WRAC_BITS << DMACTRL_WRAC_POS)
+
+#define DMACTRL_STARTCP_POS		17
+#define DMACTRL_STARTCP_BITS		BITS1
+#define DMACTRL_STARTCP			(DMACTRL_STARTCP_BITS << DMACTRL_STARTCP_POS)
+
+#define DMACTRL_STARTID_POS		16
+#define DMACTRL_STARTID_BITS       	BITS1
+#define DMACTRL_STARTID			(DMACTRL_STARTID_BITS << DMACTRL_STARTID_POS)
+
+#define DMACTRL_RYBSY_POS		15
+#define DMACTRL_RYBSY_BITS		BITS1
+#define DMACTRL_RYBSY			(DMACTRL_RYBSY_BITS << DMACTRL_RYBSY_POS)
+
+#define DMACTRL_ERERR_POS		13
+#define DMACTRL_ERERR_BITS		BITS1
+#define DMACTRL_ERERR			(DMACTRL_ERERR_BITS << DMACTRL_ERERR_POS)
+
+#define DMACTRL_ERERRINTEN_POS		12
+#define DMACTRL_ERERRINTEN_BITS		BITS1
+#define DMACTRL_ERERRINTEN		(DMACTRL_ERERRINTEN_BITS << DMACTRL_ERERRINTEN_POS)
+
+#define DMACTRL_WRERR_POS		11
+#define DMACTRL_WRERR_BITS		BITS1
+#define DMACTRL_WRERR			(DMACTRL_WRERR_BITS << DMACTRL_WRERR_POS)
+
+#define DMACTRL_WRERRINTEN_POS		10
+#define DMACTRL_WRERRINTEN_BITS		BITS1
+#define DMACTRL_WRERRINTEN		(DMACTRL_WRERRINTEN_BITS << DMACTRL_WRERRINTEN_POS)
+
+#define DMACTRL_ERINT_POS		9
+#define DMACTRL_ERINT_BITS		BITS1
+#define DMACTRL_ERINT			(DMACTRL_ERINT_BITS << DMACTRL_ERINT_POS)
+
+#define DMACTRL_ERINTEN_POS		8
+#define DMACTRL_ERINTEN_BITS		BITS1
+#define DMACTRL_ERINTEN			(DMACTRL_ERINTEN_BITS << DMACTRL_ERINTEN_POS)
+
+#define DMACTRL_WRINT_POS		7
+#define DMACTRL_WRINT_BITS		BITS1
+#define DMACTRL_WRINT			(DMACTRL_WRINT_BITS << DMACTRL_WRINT_POS)
+
+#define DMACTRL_WRINTEN_POS		6
+#define DMACTRL_WRINTEN_BITS		BITS1
+#define DMACTRL_WRINTEN			(DMACTRL_WRINTEN_BITS << DMACTRL_WRINTEN_POS)
+
+#define DMACTRL_RDINT_POS		5
+#define DMACTRL_RDINT_BITS		BITS1
+#define DMACTRL_RDINT			(DMACTRL_RDINT_BITS << DMACTRL_RDINT_POS)
+
+#define DMACTRL_RDINTEN_POS		4
+#define DMACTRL_RDINTEN_BITS		BITS1
+#define DMACTRL_RDINTEN			(DMACTRL_RDINTEN_BITS << DMACTRL_RDINTEN_POS)
+
+
+#define DMACTRL_ACCESSSPARE_POS		3
+#define DMACTRL_ACCESSSPARE_BITS	BITS1
+#define DMACTRL_ACCESSSPARE		(DMACTRL_ACCESSSPARE_BITS << DMACTRL_ACCESSSPARE_POS)
+
+#define DMACTRL_STARTERASE_POS		2
+#define DMACTRL_STARTERASE_BITS		BITS1
+#define DMACTRL_STARTERASE		(DMACTRL_STARTERASE_BITS << DMACTRL_STARTERASE_POS)
+
+#define DMACTRL_STARTWR_POS		1
+#define DMACTRL_STARTWR_BITS         	BITS1
+#define DMACTRL_STARTWR			(DMACTRL_STARTWR_BITS << DMACTRL_STARTWR_POS)
+
+#define DMACTRL_STARTRD_POS		0
+#define DMACTRL_STARTRD_BITS		BITS1
+#define DMACTRL_STARTRD			(DMACTRL_STARTRD_BITS << DMACTRL_STARTRD_POS)
+
+//NCBLKCTRL
+#define NCBLKCTRL_IOPBLKCNT_POS	16
+#define NCBLKCTRL_IOPBLKCNT_BITS	BITS8
+#define NCBLKCTRL_IOPBLKCNT		(NCBLKCTRL_IOPBLKCNT_BITS << NCBLKCTRL_IOPBLKCNT_POS)
+
+#define NCBLKCTRL_IOPBLKSZ_POS	0
+#define NCBLKCTRL_IOPBLKSZ_BITS	BITS16
+#define NCBLKCTRL_IOPBLKSZ		(NCBLKCTRL_IOPBLKSZ_BITS << NCBLKCTRL_IOPBLKSZ_POS)
+
+
+////////////////////////For ONFI//////////////////////////
+//LMEMCFG_REG bit definitions
+#define NAND_LMEM_PAGE_SIZE_DWORDS_POS          0
+#define NAND_LMEM_PAGE_SIZE_DWORDS_BITS         BITS16
+#define NAND_LMEM_PAGE_SIZE_DWORDS              (NAND_LMEM_PAGE_SIZE_DWORDS_BITS << NAND_LMEM_PAGE_SIZE_DWORDS_POS)
+#define NAND_LMEM_MAX_NUM_PAGES_POS             16
+#define NAND_LMEM_MAX_NUM_PAGES_BITS            BITS5
+#define NAND_LMEM_MAX_NUM_PAGES                 (NAND_LMEM_MAX_NUM_PAGES_BITS << NAND_LMEM_MAX_NUM_PAGES_POS)
+#define NAND_LMEM_FREE_PAGE_HIGH_WM_POS         21
+#define NAND_LMEM_FREE_PAGE_HIGH_WM_BITS        BITS5
+#define NAND_LMEM_FREE_PAGE_HIGH_WM             (NAND_LMEM_FREE_PAGE_HIGH_WM_BITS << NAND_LMEM_FREE_PAGE_HIGH_WM_POS)
+#define NAND_LMEM_FREE_PAGE_LOW_WM_POS          26
+#define NAND_LMEM_FREE_PAGE_LOW_WM_BITS         BITS5
+#define NAND_LMEM_FREE_PAGE_LOW_WM              (NAND_LMEM_FREE_PAGE_LOW_WM_BITS << NAND_LMEM_FREE_PAGE_LOW_WM_POS)
+
+
+#define tU8		unsigned char
+#define tU16		unsigned short
+#define tU32	unsigned long
+#define tPVU32	volatile unsigned long *
+extern unsigned int IO_ADDRESS(unsigned int);
+extern u8 * pilot4_nand_base;
+#define NAND_BASE 	pilot4_nand_base
+
+#define nc_printf	printk
+
+#define delay(a) do{}while(0);
+#define do_copy(a,b,c) 	memcpy(b,a,c)
+#define Compare_Word	memcmp
+
+extern int col_addr_shift, page_shift_addr, num_pages_per_block, total_erase_blks, total_block_bits;
+#define COL_ADDR_SHIFT col_addr_shift
+#define PAGE_ADDR_SHIFT page_shift_addr
+#define NR_PAGES_PER_BLOCK num_pages_per_block
+#define COL_MASK ((1 << COL_ADDR_SHIFT) - 1)
+#define TOTAL_BLOCKS total_erase_blks
+/////////////////////////////////////////////////////////
+#define LDMA_BASE		0x40900300
+#define SYSCONTROL		0x40100100
+#define NAND_LMEM_BASE		0x40900028
+#define NAND_LMEM_LIMIT		0x40900038
+#define NAND_LMEM_PRIO		0x40900058
+#define NAND_LMEM_ENBLE		0x40900064
+
+#ifdef CONFIG_MACH_PILOT4_ASIC
+#define LMEM_START_ADDRESS 0x10008000
+#define LMEM_END_ADDRESS   0x10008fff
+#else
+#define LMEM_START_ADDRESS 0x50008000
+#define LMEM_END_ADDRESS   0x50008fff
+#endif
+#define LMEM_LENGTH (LMEM_END_ADDRESS - LMEM_START_ADDRESS)
+#define PILOT_READ_ID 0x00
+#define PILOT_READ_DATA 0x01
+#define PILOT_WRITE_DATA 0x02
+#define PILOT_ERASE	0x03
+#define PILOT_READ_STATUS 0x04
+#define PILOT_READ_PARAM 0x5
+static int dma_limit = 0x80000000;
+#define DMA_LIMIT dma_limit
+
+#endif
