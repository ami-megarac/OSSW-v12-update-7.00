diff -Naur linux_org/drivers/net/ethernet/pilot_tulip/tulip_core.c linux/drivers/net/ethernet/pilot_tulip/tulip_core.c
--- linux_org/drivers/net/ethernet/pilot_tulip/tulip_core.c	2021-03-31 13:38:13.914175337 +0800
+++ linux/drivers/net/ethernet/pilot_tulip/tulip_core.c	2021-03-31 15:04:40.361298609 +0800
@@ -47,6 +47,7 @@
 #include <linux/mii.h>
 #include <linux/phy.h>
 #include <linux/ethtool.h>
+#include <linux/eth_over.h>
 #include <linux/of_device.h>
 #include <linux/of_address.h>
 #include <linux/of_platform.h>
@@ -1663,6 +1664,9 @@
 	if (cmd->base.phy_address != phy)
 		return -EINVAL;
 
+	if (cmd->base.autoneg == AUTONEG_DISABLE && speed == SPEED_1000)
+		return -EINVAL;
+	
 	/* We make sure that we don't pass unsupported values in to the PHY */
 //	cmd->advertising &= phydev->supported;
 
@@ -1749,7 +1753,7 @@
 static int tulip_get_settings(struct net_device *dev,struct ethtool_link_ksettings *cmd)
 {
 	struct tulip_private *tp = netdev_priv(dev);
-	if (tp->phy_manuf_model_num > 0 && tp->phy_manuf_model_num < 0X1f)
+	if (tp->phys[0] < 0X1f)
 		return tp_get_settings(dev, cmd);
 
 	return -EINVAL;
@@ -1759,12 +1763,11 @@
 static int tulip_set_settings(struct net_device *dev,const struct ethtool_link_ksettings *cmd)
 {
 	struct tulip_private *tp = netdev_priv(dev);
-	const unsigned int phy_idx = 0;
 
 	if (!capable(CAP_NET_ADMIN))
 		return -EPERM;
 	
-	if (tp->phy_manuf_model_num > 0 && tp->phy_manuf_model_num < 0X1f)
+	if (tp->phys[0] < 0X1f)
 		return tp_set_settings(dev, cmd);
 
 	return -EINVAL;
@@ -1780,6 +1783,16 @@
 	info->regdump_len = 0;
 }
 
+static u32 tulip_get_link(struct net_device *netdev)
+{
+        struct tulip_private *tp = netdev_priv(netdev);			
+				
+        tulip_mdio_read(netdev, tp->phys[0], MII_BMSR);
+		if(tulip_mdio_read(netdev, tp->phys[0], MII_BMSR) & BMSR_LSTATUS)
+			return 1;       
+        return 0;
+}
+
 static void tulip_get_pauseparam(struct net_device *netdev, struct ethtool_pauseparam *pause)
 {
 	struct tulip_private *tp = netdev_priv(netdev);
@@ -1869,7 +1882,7 @@
 	.get_drvinfo = tulip_get_drvinfo,
     .get_link_ksettings = tulip_get_settings,
     .set_link_ksettings = tulip_set_settings,
-	.get_link = ethtool_op_get_link,
+	.get_link = tulip_get_link,
 	.get_pauseparam = tulip_get_pauseparam,
 	.set_pauseparam = tulip_set_pauseparam,
 };
@@ -2613,7 +2626,6 @@
 static int tulip_init_one (struct platform_device *pdev)
 {
 	struct tulip_private *tp;
-	const void *mac_address;
 	static int multiport_cnt;	/* For four-port boards w/one EEPROM */
 	u8 chip_rev = 0;
 	int i, irq;
@@ -2842,9 +2854,8 @@
 	netif_napi_add(dev, &tp->napi, tulip_poll, 16);
 #endif
 
-//#if 0
+
 	dev->ethtool_ops = &ops;
-//#endif
 #ifdef CONFIG_PILOT_SG
 	dev->features   |= NETIF_F_GSO;
 	dev->features   |= NETIF_F_SG;
